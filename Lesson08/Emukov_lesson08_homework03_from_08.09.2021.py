#3. Создайте собственный класс-исключение, который должен проверять содержимое списка
# на наличие только чисел. Проверить работу исключения на реальном примере.
# Необходимо запрашивать у пользователя данные и заполнять список только числами.
# Класс-исключение должен контролировать типы данных элементов списка.
#Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно,
# пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
# При этом скрипт завершается, сформированный список с числами выводится на экран.
#Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента
# и вносить его в список, только если введено число.
# Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить
# соответствующее сообщение. При этом работа скрипта не должна завершаться.

class ListException(Exception):

    def __init__(self, list1):
        self.list1 = list1

list2 = []

while True:
    numbers = input("Введите числа без разделителей, для остановки напишите stop ")
    if numbers == "stop":
        print(f"Ввод данных остановлен {list2}")
        break

    try:
        if not numbers.isnumeric():
            raise ListException("Не число")
        list2.append(int(numbers))
    except ListException as error:
        print("Вы ввели не число")


